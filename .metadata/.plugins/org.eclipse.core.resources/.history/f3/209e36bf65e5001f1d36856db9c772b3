package com.biblioteca.dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import com.biblioteca.modelo.Prestamo;

public class PrestamoDAO {

	private Connection conexion;
	
	public PrestamoDAO(Connection conexion) {
		super();
		this.conexion = conexion;
	}
	
	// Registramos un prestamo
	public void registrarPrestamos(Prestamo prestamo) throws SQLException {
		String sql = "INSERT INTO prestamos (id_usuario, id_libro, fecha_prestamo) VALUES (?, ?, ?)";
		try(PreparedStatement ps = conexion.prepareStatement(sql)){
			ps.setInt(1,  prestamo.getIdUsuario());
			ps.setInt(2, prestamo.getIdLibro());
			ps.setDate(3, new java.sql.Date(prestamo.getFechaPrestamo().getTime()));
			ps.execute();
		}
	}
	
	// Registrar devolucion de un prestamos
	public void registrarDevolucion(int idPrestamo, Date fechaDevolucion) throws SQLException {
		String sql = "UPDATE prestamos SET fecha_devolucion = ? WHERE id_usuario = ?";
		try(PreparedStatement ps = conexion.prepareStatement(sql)){
			ps.setDate(1, new java.sql.Date(fechaDevolucion.getTime()));
			ps.setInt(2, idPrestamo);
			ps.executeUpdate();
		}
	}
	
	// Obtener prestamos por usuaio
	public List<Prestamo> ObtenerPrestamosPorUsuario(int idUsuario) throws SQLException {
		List<Prestamo> prestamos = new ArrayList<>();
		String sql = "SELECT * FROM prestamos WHERE id_usuario = ?";
		try(PreparedStatement ps = conexion.prepareStatement(sql)){
			ps.setInt(1, idUsuario);
			
			try(ResultSet rs = ps.executeQuery()){
				while(rs.next()) {
					Prestamo prestamo = new Prestamo();
					prestamo.setIdPrestamo(rs.getInt("id_prestamo"));
					prestamo.setIdUsuario(rs.getInt("id_usuario"));
					prestamo.setIdLibro(rs.getInt("id_libro"));
					prestamo.setFechaPrestamo(rs.getDate("fecha_prestamo"));
					prestamo.setFechaDevolucion(rs.getDate("fecha_devolucion"));
					prestamos.add(prestamo);
				}
			}
		}
	}
	
	
}
