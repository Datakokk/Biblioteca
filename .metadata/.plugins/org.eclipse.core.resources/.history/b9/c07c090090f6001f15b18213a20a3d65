package com.biblioteca.servicio;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import com.biblioteca.dao.UsuarioDAO;
import com.biblioteca.modelo.Usuario;
import at.favre.lib.crypto.bcrypt.BCrypt;

public class UsuarioServicio {

	private UsuarioDAO usuarioDAO;
	
	public UsuarioServicio(Connection conexion) {
		this.usuarioDAO = new UsuarioDAO(conexion);
	}
	
	public Usuario obtenerUsuarioPorEmail(String email) throws SQLException {
        return usuarioDAO.obtenerUsuarioPorEmail(email); // Llama al DAO para buscar el usuario
    }
	
	public void registrarUsuario(Usuario usuario) throws SQLException {
		if(usuarioDAO.obtenerUsuarioPorEmail(usuario.getEmail()) != null) {
			throw new SQLException("El email ya esta registrado");
		}
		
		// üîê Hashear la contrase√±a antes de guardarla
        String hashedPassword = BCrypt.hashpw(usuario.getPassword(), BCrypt.gensalt());
        usuario.setPassword(hashedPassword);

		usuarioDAO.agregarUsuario(usuario);
	}
	
	public Usuario autenticarUsuario(String email, String password) throws SQLException {
        Usuario usuario = usuarioDAO.obtenerUsuarioPorEmail(email);

        if (usuario != null) {
            System.out.println("üîç Email ingresado: " + email);
            System.out.println("üîê Hash almacenado: " + usuario.getPassword());
            System.out.println("üîë Contrase√±a ingresada: " + password);

            // Intentar verificar la contrase√±a con BCrypt
            boolean match = BCrypt.checkpw(password, usuario.getPassword());
            System.out.println("üîç Comparaci√≥n de contrase√±a: " + match);

            if (match) {
                System.out.println("‚úÖ Contrase√±a correcta");
                return usuario;
            } else {
                System.out.println("‚ùå Contrase√±a incorrecta");
            }
        } else {
            System.out.println("‚ö† Usuario no encontrado");
        }

        return null;
    }
	
	public Usuario obtenerUsuarioEmail(String email) throws SQLException {
		return usuarioDAO.obtenerUsuarioPorEmail(email);
	}
	
	public List<Usuario> listarUsuarios() throws SQLException{
		return usuarioDAO.listarUsuarios();
	}
}