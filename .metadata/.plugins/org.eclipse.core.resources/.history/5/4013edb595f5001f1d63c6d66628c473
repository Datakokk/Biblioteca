package com.biblioteca.main;

import com.biblioteca.dao.ReporteDAO;
import com.biblioteca.modelo.*;
import com.biblioteca.servicio.*;
import com.biblioteca.util.ConexionJDBC;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        System.out.println("üìö Sistema de Biblioteca Iniciado ‚úÖ");

        try (Connection conexion = ConexionJDBC.obtenerConexion();
             Scanner scanner = new Scanner(System.in)) {

            UsuarioServicio usuarioServicio = new UsuarioServicio(conexion);
            LibroServicio libroServicio = new LibroServicio(conexion);
            PrestamoServicio prestamoServicio = new PrestamoServicio(new com.biblioteca.dao.PrestamoDAO(conexion));
            ReservaServicio reservaServicio = new ReservaServicio(new com.biblioteca.dao.ReservaDAO(conexion));
            ReporteDAO reporteDAO = new ReporteDAO(conexion); 

            // 1Ô∏è‚É£ INICIO DE SESI√ìN
            System.out.print("Ingrese su email: ");
            String email = scanner.nextLine();
            System.out.print("Ingrese su contrase√±a: ");
            String password = scanner.nextLine();

            Usuario usuario = usuarioServicio.obtenerUsuarioPorEmail(email);

            if (usuario == null || !usuario.getPassword().equals(password)) {
                System.out.println("‚ùå Credenciales incorrectas. Saliendo...");
                return;
            }

            String rolUsuario = usuario.getRol(); // Obtenemos el rol del usuario
            System.out.println("‚úÖ Bienvenido, " + usuario.getNombre() + " | Rol: " + rolUsuario);

            // 2Ô∏è‚É£ MEN√ö SEG√öN EL ROL
            while (true) {
                if (rolUsuario.equalsIgnoreCase("administrador")) {
                    System.out.println("\nüîπ Men√∫ Administrador:");
                    System.out.println("1. Agregar usuario");
                    System.out.println("2. Agregar libro");
                    System.out.println("3. Registrar pr√©stamo");
                    System.out.println("4. Registrar devoluci√≥n");
                    System.out.println("5. Listar libros");
                    System.out.println("6. Actualizar libro");
                    System.out.println("7. Eliminar libro");
                    System.out.println("8. Reporte de Pr√©stamos Activos");
                    System.out.println("9. Reporte de Usuarios con M√°s Pr√©stamos");
                    System.out.println("10. Reporte de Libros M√°s Prestados");
                    System.out.println("11. Salir");
                } else { 
                    System.out.println("\nüîπ Men√∫ Usuario:");
                    System.out.println("1. Listar libros disponibles");
                    System.out.println("2. Registrar pr√©stamo");
                    System.out.println("3. Registrar devoluci√≥n");
                    System.out.println("4. Ver mis pr√©stamos activos");
                    System.out.println("5. Salir");
                }

                System.out.print("Seleccione una opci√≥n: ");
                int opcion = scanner.nextInt();
                scanner.nextLine();

                if (rolUsuario.equalsIgnoreCase("administrador")) {
                    switch (opcion) {
                        case 1:
                            System.out.print("Ingrese nombre: ");
                            String nombre = scanner.nextLine();
                            System.out.print("Ingrese email: ");
                            String nuevoEmail = scanner.nextLine();
                            System.out.print("Ingrese tel√©fono: ");
                            String telefono = scanner.nextLine();
                            System.out.print("Ingrese rol (administrador/usuario): ");
                            String nuevoRol = scanner.nextLine();
                            System.out.print("Ingrese contrase√±a: ");
                            String nuevaPassword = scanner.nextLine();

                            Usuario nuevoUsuario = new Usuario();
                            nuevoUsuario.setNombre(nombre);
                            nuevoUsuario.setEmail(nuevoEmail);
                            nuevoUsuario.setTelefono(telefono);
                            nuevoUsuario.setRol(nuevoRol);
                            nuevoUsuario.setPassword(nuevaPassword);

                            usuarioServicio.registrarUsuario(nuevoUsuario);
                            System.out.println("‚úÖ Usuario registrado con √©xito!");
                            break;

                        case 2:
                            System.out.print("Ingrese t√≠tulo: ");
                            String titulo = scanner.nextLine();
                            System.out.print("Ingrese autor: ");
                            String autor = scanner.nextLine();
                            System.out.print("Ingrese g√©nero: ");
                            String genero = scanner.nextLine();
                            System.out.print("Ingrese estado (disponible/prestado): ");
                            String estado = scanner.nextLine();

                            Libro libro = new Libro();
                            libro.setTitulo(titulo);
                            libro.setAutor(autor);
                            libro.setGenero(genero);
                            libro.setEstado(estado);

                            libroServicio.agregarLibro(libro);
                            System.out.println("‚úÖ Libro agregado con √©xito!");
                            break;

                        case 3:
                            System.out.print("Ingrese ID del usuario: ");
                            int idUsuario = scanner.nextInt();
                            System.out.print("Ingrese ID del libro: ");
                            int idLibro = scanner.nextInt();
                            scanner.nextLine();

                            Prestamo prestamo = new Prestamo();
                            prestamo.setIdUsuario(idUsuario);
                            prestamo.setIdLibro(idLibro);
                            prestamo.setFechaPrestamo(new java.util.Date());

                            prestamoServicio.registrarPrestamo(prestamo);
                            System.out.println("‚úÖ Pr√©stamo registrado con √©xito!");
                            break;

                        case 11:
                            System.out.println("üëã Saliendo del sistema...");
                            return;
                    }
                } else { 
                    switch (opcion) {
                        case 1:
                            List<Libro> libros = libroServicio.listarLibros();
                            System.out.println("üìö Libros disponibles:");
                            for (Libro l : libros) {
                                if (l.getEstado().equalsIgnoreCase("disponible")) {
                                    System.out.println(l.getIdLibro() + " - " + l.getTitulo() + " de " + l.getAutor());
                                }
                            }
                            break;

                        case 2:
                            System.out.print("Ingrese ID del libro a prestar: ");
                            int idLibroUsuario = scanner.nextInt();
                            scanner.nextLine();

                            Prestamo prestamoUsuario = new Prestamo();
                            prestamoUsuario.setIdUsuario(usuario.getIdUsuario()); // Usa el ID del usuario autenticado
                            prestamoUsuario.setIdLibro(idLibroUsuario);
                            prestamoUsuario.setFechaPrestamo(new java.util.Date());

                            prestamoServicio.registrarPrestamo(prestamoUsuario);
                            System.out.println("‚úÖ Pr√©stamo registrado con √©xito!");
                            break;

                        case 3:
                            System.out.print("Ingrese ID del pr√©stamo a devolver: ");
                            int idPrestamo = scanner.nextInt();
                            scanner.nextLine();

                            try {
                                prestamoServicio.devolverLibro(idPrestamo);
                                System.out.println("üìå Pr√©stamo devuelto con √©xito.");
                            } catch (SQLException e) {
                                System.out.println("‚ùå Error al registrar la devoluci√≥n: " + e.getMessage());
                            }
                            break;

                        case 4:
                            System.out.println("\nüìå Mis Pr√©stamos Activos:");
                            List<Prestamo> prestamosActivos = prestamoServicio.obtenerPrestamosActivosPorUsuario(usuario.getIdUsuario());
                            for (Prestamo p : prestamosActivos) {
                                System.out.println("üìñ Libro ID: " + p.getIdLibro() + " | Fecha Pr√©stamo: " + p.getFechaPrestamo());
                            }
                            break;

                        case 5:
                            System.out.println("üëã Saliendo del sistema...");
                            return;
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("‚ùå Error en la conexi√≥n con la base de datos");
        }
    }
}
