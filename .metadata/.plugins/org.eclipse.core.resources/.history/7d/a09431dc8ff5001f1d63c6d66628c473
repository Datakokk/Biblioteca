package com.biblioteca.main;

import com.biblioteca.dao.ReporteDAO;
import com.biblioteca.modelo.*;
import com.biblioteca.servicio.*;
import com.biblioteca.util.ConexionJDBC;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        System.out.println("üìö Sistema de Biblioteca Iniciado ‚úÖ");

        try (Connection conexion = ConexionJDBC.obtenerConexion();
             Scanner scanner = new Scanner(System.in)) {

            UsuarioServicio usuarioServicio = new UsuarioServicio(conexion);
            LibroServicio libroServicio = new LibroServicio(conexion);
            PrestamoServicio prestamoServicio = new PrestamoServicio(new com.biblioteca.dao.PrestamoDAO(conexion));
            ReservaServicio reservaServicio = new ReservaServicio(new com.biblioteca.dao.ReservaDAO(conexion));
            ReporteDAO reporteDAO = new ReporteDAO(conexion); // ‚úÖ NUEVO

            while (true) {
                System.out.println("\nSistema de Gesti√≥n de Biblioteca");
                System.out.println("1. Agregar usuario");
                System.out.println("2. Agregar libro");
                System.out.println("3. Registrar pr√©stamo");
                System.out.println("4. Listar libros");
                System.out.println("5. Actualizar libro");
                System.out.println("6. Eliminar libro");
                System.out.println("7. Reporte de Pr√©stamos Activos");
                System.out.println("8. Reporte de Usuarios con M√°s Pr√©stamos");
                System.out.println("9. Reporte de Libros M√°s Prestados");
                System.out.println("10. Salir");
                System.out.print("Seleccione una opci√≥n: ");

                int opcion = scanner.nextInt();
                scanner.nextLine();

                switch (opcion) {
                    case 1:
                        System.out.print("Ingrese nombre: ");
                        String nombre = scanner.nextLine();
                        System.out.print("Ingrese email: ");
                        String email = scanner.nextLine();
                        System.out.print("Ingrese tel√©fono: ");
                        String telefono = scanner.nextLine();
                        System.out.print("Ingrese rol (admin/usuario): ");
                        String rol = scanner.nextLine();
                        System.out.print("Ingrese contrase√±a: ");
                        String password = scanner.nextLine();

                        Usuario usuario = new Usuario();
                        usuario.setNombre(nombre);
                        usuario.setEmail(email);
                        usuario.setTelefono(telefono);
                        usuario.setRol(rol);
                        usuario.setPassword(password);

                        usuarioServicio.registrarUsuario(usuario);
                        System.out.println("Usuario registrado con √©xito!");
                        break;

                    case 2:
                        System.out.print("Ingrese t√≠tulo: ");
                        String titulo = scanner.nextLine();
                        System.out.print("Ingrese autor: ");
                        String autor = scanner.nextLine();
                        System.out.print("Ingrese g√©nero: ");
                        String genero = scanner.nextLine();
                        System.out.print("Ingrese estado (disponible/prestado): ");
                        String estado = scanner.nextLine();

                        Libro libro = new Libro();
                        libro.setTitulo(titulo);
                        libro.setAutor(autor);
                        libro.setGenero(genero);
                        libro.setEstado(estado);

                        libroServicio.agregarLibro(libro);
                        System.out.println("Libro agregado con √©xito!");
                        break;

                    case 3:
                        System.out.print("Ingrese ID del usuario: ");
                        int idUsuario = scanner.nextInt();
                        System.out.print("Ingrese ID del libro: ");
                        int idLibro = scanner.nextInt();
                        scanner.nextLine();

                        Prestamo prestamo = new Prestamo();
                        prestamo.setIdUsuario(idUsuario);
                        prestamo.setIdLibro(idLibro);
                        prestamo.setFechaPrestamo(new java.util.Date());

                        prestamoServicio.registrarPrestamo(prestamo);
                        System.out.println("Pr√©stamo registrado con √©xito!");
                        break;

                    case 4:
                        List<Libro> libros = libroServicio.listarLibros();
                        System.out.println("Lista de libros:");
                        for (Libro l : libros) {
                            System.out.println(l.getIdLibro() + " - " + l.getTitulo() + " de " + l.getAutor() + " (" + l.getEstado() + ")");
                        }
                        break;

                    case 5:
                        System.out.print("Ingrese ID del libro a actualizar: ");
                        int idActualizar = scanner.nextInt();
                        scanner.nextLine();

                        Libro libroActualizar = libroServicio.obtenerLibroPorID(idActualizar);
                        if (libroActualizar != null) {
                            System.out.print("Nuevo t√≠tulo (" + libroActualizar.getTitulo() + "): ");
                            String nuevoTitulo = scanner.nextLine();
                            System.out.print("Nuevo autor (" + libroActualizar.getAutor() + "): ");
                            String nuevoAutor = scanner.nextLine();
                            System.out.print("Nuevo g√©nero (" + libroActualizar.getGenero() + "): ");
                            String nuevoGenero = scanner.nextLine();
                            System.out.print("Nuevo estado (" + libroActualizar.getEstado() + "): ");
                            String nuevoEstado = scanner.nextLine();

                            libroActualizar.setTitulo(nuevoTitulo.isEmpty() ? libroActualizar.getTitulo() : nuevoTitulo);
                            libroActualizar.setAutor(nuevoAutor.isEmpty() ? libroActualizar.getAutor() : nuevoAutor);
                            libroActualizar.setGenero(nuevoGenero.isEmpty() ? libroActualizar.getGenero() : nuevoGenero);
                            libroActualizar.setEstado(nuevoEstado.isEmpty() ? libroActualizar.getEstado() : nuevoEstado);

                            libroServicio.actualizarLibro(libroActualizar);
                            System.out.println("Libro actualizado con √©xito!");
                        } else {
                            System.out.println("Libro no encontrado.");
                        }
                        break;

                    case 6:
                        System.out.print("Ingrese ID del libro a eliminar: ");
                        int idEliminar = scanner.nextInt();
                        scanner.nextLine();

                        try {
                            libroServicio.eliminarLibro(idEliminar);
                            System.out.println("Libro eliminado con √©xito!");
                        } catch (SQLException e) {
                            System.out.println("Error al eliminar el libro: " + e.getMessage());
                        }
                        break;

                    case 7: // Reporte de Pr√©stamos Activos
                        System.out.println("\nüìå Reporte de Pr√©stamos Activos:");
                        List<String> prestamosActivos = reporteDAO.generarReportePrestamosActivos();
                        prestamosActivos.forEach(System.out::println);
                        break;

                    case 8: // Reporte de Usuarios con M√°s Pr√©stamos
                        System.out.println("\nüìå Reporte de Usuarios con M√°s Pr√©stamos:");
                        List<String> usuariosFrecuentes = reporteDAO.generarReporteUsuariosFrecuentes();
                        usuariosFrecuentes.forEach(System.out::println);
                        break;

                    case 9: // Reporte de Libros M√°s Prestados
                        System.out.println("\nüìå Reporte de Libros M√°s Prestados:");
                        List<String> librosPopulares = reporteDAO.generarReporteLibrosMasPrestados();
                        librosPopulares.forEach(System.out::println);
                        break;

                    case 10:
                        System.out.println("Saliendo del sistema...");
                        return;

                    default:
                        System.out.println("Opci√≥n inv√°lida. Intente nuevamente.");
                        break;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Error en la conexi√≥n con la base de datos");
        }
    }
}
